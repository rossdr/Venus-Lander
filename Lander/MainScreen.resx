<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="lblMouseInstr.Text" xml:space="preserve">
    <value>The object of this game is to land your lander safely on a smooth surface.
On each landscape, there are three such landing pads.
Your ship will be destroyed if you hit any object or try to land at too great a speed,
either vertical or lateral.
Use the arrow keys to guide direction and the up arrow to fire engines.</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAACAgAAABAAgAqAgAAJ4FAAAwMAAAAQAIAKgOAABGDgAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAQAAdBIAAHQSAAAAAQAAAAEAANLS0gDMzMwA09PTAOXl5QDKysoA8vLyAHN0
        cwDz9PMA2dnZAOrr6gC0s7QAPDw8ADU0NQAAAAAAKikqAD8/PwCamZoA7u7uAHx7fAA5PDkAvLy8ALC8
        sADH08cAubm5AE1STQBgXmAASUhJAEdMRwD///8A+//7AGhwaAArKisATlROAOf25wDu/O4A5vTmAHV+
        dQAeHB4A9/f3ACgmKABJUEkA4fHhAOv56wB4gngABAIEAGFjYQCFiIUAnKGcAFlcWQCrq6sA4eHhAIqK
        igAXFhcAPDo8ADQ4NAAHCQcACwsLANvb2wBeXl4ACAcIAFlZWQCysrIABAQEAJ+fnwB5eXkAR0dHADc3
        NwCqqqoAcnJyABoaGgCAgIAADQ0NAI6OjgCUlJQAoaGhAJGRkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIDAzIAAAEAADkDMgMAAAhJSEhJ
        CAEDAAhKM0tIAgA5Rkc4QAMyBgEFSEUNRAIABBwLQRwXQQ1CQxxERRwBAAABADw8FA09Pj9ADwEBAAAB
        CToNDQ0NOw0NDQ0LAwAAATIzNA01EzYTCzc4BjkAAAAICi0uHBwcHBwvMDEIAAABJicoHCkqKiopHCss
        EQAAAQULIBwhIiIiIxwkJQkAAAEFGhsRHBwcHB0HHh8JAAAAARESExQVFhUXGBkRAQAAAAABCQoLDA0O
        DxAFAQAAAAAAAgECBQMGAgcIAQIAAAAAAAACAAEBAwAEAAIAAAAAAAAAAAAAAAEAAgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgA
        AAAgAAAAQAAAAAEACAAAAAAAAAQAAHQSAAB0EgAAAAEAAAABAADT09MA1NTUANfX1wDJyckAt7e3ALa2
        tgDGxsYA3NzcAKenpwBZWVkASUlJAJKSkgDPz88Aq6urAImIiQCHhocAg4ODABQUFAAICAgARkZGAHt7
        ewCcnJwAbGxsACYmJgAZGRkADQ0NABESEQAdHR0AVVVVAL69vgCBgIEAXF1cAGZrZgB6gXoAgoWCAH2F
        fQB/h38AgIeAAIKLggBtcm0AcnJyAK2trQBMTUwAPEA8AIuTiwDh7+EA9/73APP/8wDv/u8AqLKoAExS
        TACbm5sAtMC0ANff1wDf6d8Av8i/AJGZkQAjIyMAKy4rAJ2onQD7//sA+v/6AL/LvwBHTEcAZmZmAL+/
        vwAoKCgALzIvAJulmwC6xroASE1IAGpqagDs++wAGxsbACcnJwCfn58AsbyxANXd1QDe6N4AvMW8AF1g
        XQBSUlIANzo3AN7s3gDq+OoApK6kAEdLRwA6OzoAOj46AHJ5cgB8g3wADw8PAEdHRwCOjo4AMDAwAAAA
        AAAFBQUAoaGhAC4uLgA1NTUAYGBgAJWVlQB5eXkAc3NzAD8/PwDj4+MAsLCwAKOjowCYmJgA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQICAgICAgEBAAAAAAAAAAAAAQECAgICAgEBAAAAAAAMAwMDAwMDDAAA
        AAAAAAAAAAAAAwMDAwMDDAAAAAECA2UfURwcUR9lAwEBAQICAQABAAgWURwcHBwPHQIAAQIGHmMRYGAR
        Yx4GAgEDBAUGAAIAbAoYEl8aFxYFAgAAAQxBa0AbG0AIQQACAggJCgsABwAGKRRiGiplBAwBAAAAAQcB
        DhdCXQJpAARlHxgSCg5qAwdpKWgRRwMHAQAAAAAAAgAOYmIPAwcDD14ZEhIZGxYdBwBhaDkWBgIBAAAA
        AAABAAVdKGQWDQMeGxsJQGIZZB0EZmQWDw0MAQEAAAAAAAEADB0OYxhkYRYbYg9lExFRFWYXOWcFAwAB
        AAAAAAAAAgBhCWIZYBheORIZQl4RYBhiORISFwpdAwIBAAAAAAACDA4XX19fX19fX19fX19fX19fX19f
        GUdBAgEAAAAAAAIAXV5fX19fYGBgYGBgYGBgYF9fX18YKAYCAQAAAAAAAQAFDgkbElhZIiMjI1paISIh
        MhpbXBQNDAEBAAAAAAABAAxBCwpSLFMuMDAwMDAwLlRVVlcUBAMAAQAAAAAAAAIASx8cJUxNLy4uLi4u
        Li4uL05POFBRDgMCAQAAAAAAAgwPOTo7Lz0vMDAwMDAwMDAvPT0+PxFAQQIBAAAAAAACAA9KQ0QwPS8w
        MDAwMDAwLy8uLkVGGEcGAgEAAAAAAAIAD0JDREg9Ly8wMDAwLy8vLy4uRUZJRwYCAQAAAAAAAgAPQkNE
        MD0vMDAwMDAwLy8vLi5FRhhHBgIBAAAAAAACDA85OjsvPC8vLy8vLy8vMC89PT4/EUBBAgEAAAAAAAIA
        MxwqJTQ1MC4uLi4uLi4uLzY3OAkKDwMCAQAAAAAAAQAMHQsqKywtLi8vMDAwMC4wMTIrFAUDAAEAAAAA
        AAAAAAICHR4fICEiIyQlJiQjIiMnHygpAgIBAAAAAAAAAAAAAAABAQQWFxgYERkSGhgYGxwIAAEAAAAA
        AAAAAAAAAAAAAAECDA0ODxAJERITFA4PFQYCAQAAAAAAAAAAAAAAAAAAAAAAAQEHAggJCgsABwIBAQAA
        AAAAAAAAAAAAAAAAAAAAAAABAQEBAwQFBgABAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgIBAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAADAA
        AABgAAAAAQAIAAAAAAAACQAAdBIAAHQSAAAAAQAAAAEAANLS0gDT09MA2dnZAMvLywDDw8MA3NzcALOz
        swCTk5MAenp6AIKCggCio6IAVVhVADQ1NABDQ0MAd3d3AKurqwCam5oAi4uLAFtbWwArKysACwsLABcX
        FwBESUQAurq6AFNTUwA7PDsAPz8/ACMkIwABAQEALy8vAGJkYgAuMC4AGxsbABYXFgB0dHQAZGlkAGtr
        awBrcGsAS0xLAE1QTQCCioIAsryyAMjVyADO1M4AwcvBAJmimQA2OjYApq+mAN3r3QD2//YA+//7APr/
        +gDt++0Ae4J7ANLb0gDq+eoA7/3vAKSupACMlIwAqbOpAPD38ADy+vIA5/bnAMPPwwA8QDwAHiEeABMT
        EwCuua4A5vXmAMzZzADK18oA5fPlAM/czwCVnpUAvcm9ANTb1ADj7OMA6vLqANzi3AC8xbwA0NvQAHZ+
        dgDa59oADxAPAOPj4wDQ0NAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAQABAQEAAAAAAAAAAAEBAgICAgICAgICAgEBAAAAAAAAAAAAAAAAAAABAQICAgICAgICAgEB
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAMXDxAQ
        EBAQEAcQDxcDAQEBAQEBAQEBAQABAQAEBhAHEBAQEBAHCgYEAAEAAAECAQQQJBYZGg0NDRkWJBAEAQIB
        AQECAgIBAQEBAgMPCBgZGQ0NDRkZEgkGAwIAAAECARcRGBshFBQUFCEbGBEXAQIBAAMEBAQDAwECAgMK
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQECAgIBAQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>